plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
    id "com.google.protobuf" version "0.8.15"
    id "com.adarshr.test-logger" version "2.1.1"
    id "java"
    id "application"
    id "idea"
}

group = 'de.zwei'
version = '1.0-SNAPSHOT'

ext {
    grpcVersion = "1.32.1"
    grpcKotlinVersion = "1.0.0"
    protobufVersion = "3.15.1"
}

application {
    mainClassName = "de.zwei.shibi.Application"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'io.grpc:grpc-services:1.32.1'
    implementation 'io.grpc:grpc-netty:1.35.0'
    implementation "io.ktor:ktor-server-core:1.5.1"
    implementation "io.ktor:ktor-server-jetty:1.5.1"
    implementation "io.ktor:ktor-client-jetty:1.5.1"
    implementation "io.ktor:ktor-client-serialization:1.5.1"
    implementation "io.ktor:ktor-client-gson:1.5.1"
    implementation "io.ktor:ktor-gson:1.5.1"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'com.github.schildbach:public-transport-enabler:master-SNAPSHOT'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    if (JavaVersion.current().isJava9Compatible()) {
        compile 'javax.annotation:javax.annotation-api:1.3.1'
    }
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'

    api 'io.grpc:grpc-kotlin-stub:1.0.0'
    api 'com.google.protobuf:protobuf-java-util:3.15.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

task shibiRun {
    group = "Shibi"
    description = "Runs Shibi service"
    dependsOn 'generateProto'
    dependsOn 'run'
}

task shibiJar {
    group = "Shibi"
    description = "Builds Shibi service jar file"
    dependsOn 'generateProto'
    dependsOn 'check'
    dependsOn 'build'
    dependsOn 'jar'
}

test {
    useJUnitPlatform()
}

clean {
    delete protobuf.generatedFilesBaseDir
}

compileKotlin {
    kotlinOptions.jvmTarget = "15"
    kotlinOptions.useIR = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "15"
}

jar {
    manifest {
        attributes 'Main-Class': 'de.zwei.shibi.Application'
    }

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

protobuf {
    generatedFilesBaseDir  = "$buildDir/generated/sources"
    protoc {
        artifact = "com.google.protobuf:protoc:3.15.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.32.1'
        }
        grpckt {
            artifact = 'io.grpc:protoc-gen-grpc-kotlin:1.0.0:jdk7@jar'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins { task ->
            grpc { }
            grpckt { }
        }
    }
}

sourceSets.main.java.srcDir new File(buildDir, 'generated/source')

idea {
    module {
        generatedSourceDirs += file('build/generated/sources')
    }
}

testlogger {
    theme 'mocha-parallel'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}
